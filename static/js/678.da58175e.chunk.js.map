{"version":3,"file":"static/js/678.da58175e.chunk.js","mappings":"uQACA,EAAgC,wC,SCmGhC,EA9FyB,WAAO,IAAD,IACrBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,aAAcH,GAE1B,IAqBII,EArBEC,GAAcC,EAAAA,EAAAA,QAAM,oBAACN,EAASO,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAuBnD,IArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKhB,EAAL,CAGA,IAAMiB,EAAO,mCAAG,sGAEZb,GAAU,GAFE,SAGWc,EAAAA,EAAAA,IAAA,8CACkBlB,EADlB,6DAHX,gBAGJmB,EAHI,EAGJA,KAGRb,EAAQa,GANI,yEASZf,GAAU,GATE,4EAAH,qDAYba,GAbC,CAcF,GAAE,CAACjB,IAIS,OAATK,EAAe,CACjB,IAAMe,EAA4B,GAApBf,EAAKgB,aACnBV,EAAYW,KAAKC,MAAMH,EACxB,CAID,OACE,2BACGjB,IAAU,SAACqB,EAAA,EAAD,KACX,SAAC,KAAD,CAAMC,GAAIb,EAAYc,QAAtB,SAA+B,YACrB,OAATrB,IACC,gCACG,KACD,iBAAKsB,UAAWC,EAAhB,WACE,gBACEC,IACExB,EAAKyB,YACD,CAAC,mCAAD,OAAoCzB,EAAKyB,cAZzD,gFAeUC,MAAO,IACPC,IAAI,YAEN,4BACE,0BACG3B,EAAK4B,MAAM,KAAG5B,EAAK6B,aAAaC,MAAM,EAAG,GAAG,QAE/C,yBAAG,eAAaxB,EAAU,OAEP,KAAlBN,EAAK+B,WACJ,iCACE,wBAAI,cACJ,uBAAI/B,EAAK+B,eAIb,wBAAI,YACJ,wBACG/B,EAAKgC,OAAOC,KAAI,SAAAC,GACf,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACvB,aAIP,4BACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMhB,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,qBAIzB,SAAC,KAAD,SAKT,C","sources":["webpack://react-homework-template/./src/components/MovieDetailsPage.module.css?6661","pages/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"MovieDetailsPage_cardContainer__7FPRk\"};","import axios from 'axios';\nimport { Loader } from 'components/Loader';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport styles from '../components/MovieDetailsPage.module.css';\n\nconst MoviesDetailsPge = () => {\n  const { movieId } = useParams();\n  const [loader, setLoader] = useState(false);\n  const [film, setFilm] = useState(null);\n\n  const location = useLocation();\n  console.log('location: ', location);\n\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchFn = async () => {\n      try {\n        setLoader(true);\n        const { data } = await axios.get(\n          ` https://api.themoviedb.org/3/movie/${movieId}?language=en-US&api_key=c2d5ae1916124f8e18d2a212d8e4ab11`\n        );\n        setFilm(data);\n      } catch (error) {\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchFn();\n  }, [movieId]);\n\n  let userScore;\n\n  if (film !== null) {\n    const score = film.vote_average * 10;\n    userScore = Math.round(score);\n  }\n\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n  return (\n    <div>\n      {loader && <Loader />}\n      <Link to={backLinkRef.current}>Go back</Link>\n      {film !== null && (\n        <>\n          {' '}\n          <div className={styles.cardContainer}>\n            <img\n              src={\n                film.poster_path\n                  ? [`https://image.tmdb.org/t/p/w500/${film.poster_path}`]\n                  : defaultImg\n              }\n              width={250}\n              alt=\"poster\"\n            />\n            <div>\n              <h2>\n                {film.title} ({film.release_date.slice(0, 4)})\n              </h2>\n              <p>User Score: {userScore}%</p>\n\n              {film.overview !== '' && (\n                <>\n                  <h3>Overview</h3>\n                  <p>{film.overview}</p>\n                </>\n              )}\n\n              <h3>Genres</h3>\n              <ul>\n                {film.genres.map(genre => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesDetailsPge;\n"],"names":["movieId","useParams","useState","loader","setLoader","film","setFilm","location","useLocation","console","log","userScore","backLinkRef","useRef","state","from","useEffect","fetchFn","axios","data","score","vote_average","Math","round","Loader","to","current","className","styles","src","poster_path","width","alt","title","release_date","slice","overview","genres","map","genre","name","id"],"sourceRoot":""}