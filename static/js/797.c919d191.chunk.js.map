{"version":3,"file":"static/js/797.c919d191.chunk.js","mappings":"0OAkEA,UA7DmB,WACjB,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAaF,EAAaG,IAAI,SAE9BC,GAAWC,EAAAA,EAAAA,MA4BjB,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAGA,IAAMK,EAAO,mCAAG,sGAEZT,GAAU,GAFE,SAGWU,EAAAA,EAAAA,IAAA,2DAC+BN,EAD/B,wFAHX,gBAGJO,EAHI,EAGJA,KAIRb,EAAea,EAAKC,SAPR,yEAUZZ,GAAU,GAVE,4EAAH,qDAabS,GAdC,CAeF,GAAE,CAACL,KAGF,2BACGL,IAAU,SAAC,IAAD,KACX,kBAAMc,OAAO,SAASC,SA7BL,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAAcC,SAASC,YAAYH,MACnDd,EAAgB,CAAEkB,MAAOJ,GAC1B,EAyBG,WACE,kBAAOK,KAAK,OAAOC,KAAK,iBACxB,4BAAQ,eAEV,wBAC0B,IAAvB1B,EAAY2B,QACX3B,EAAY4B,KAAI,SAAAC,GACd,OACE,yBACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAMtB,GACfuB,GAAE,kBAAaH,EAAWI,IAF5B,SAIGJ,EAAWK,SALPL,EAAWI,GASvB,QAIV,C","sources":["pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryValue = searchParams.get('query');\n\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = e.currentTarget.elements.inputParams.value;\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!queryValue) {\n      return;\n    }\n    const fetchFn = async () => {\n      try {\n        setLoader(true);\n        const { data } = await axios.get(\n          ` https://api.themoviedb.org/3/search/movie?query=${queryValue}&include_adult=false&language=en-US&page=1&api_key=c2d5ae1916124f8e18d2a212d8e4ab11`\n        );\n\n        setSearchFilms(data.results);\n      } catch (error) {\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchFn();\n  }, [queryValue]);\n\n  return (\n    <div>\n      {loader && <Loader />}\n      <form action=\"submit\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"inputParams\" />\n        <button>Search</button>\n      </form>\n      <ul>\n        {searchFilms.length !== 0 &&\n          searchFilms.map(searchFilm => {\n            return (\n              <li key={searchFilm.id}>\n                <Link\n                  state={{ from: location }}\n                  to={`/movies/${searchFilm.id}`}\n                >\n                  {searchFilm.title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["useState","searchFilms","setSearchFilms","loader","setLoader","useSearchParams","searchParams","setSearchParams","queryValue","get","location","useLocation","useEffect","fetchFn","axios","data","results","action","onSubmit","e","preventDefault","value","currentTarget","elements","inputParams","query","type","name","length","map","searchFilm","state","from","to","id","title"],"sourceRoot":""}