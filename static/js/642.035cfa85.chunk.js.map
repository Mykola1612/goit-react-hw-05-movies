{"version":3,"file":"static/js/642.035cfa85.chunk.js","mappings":"yNA4CA,UAxCoB,WAClB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAGA,IAAMM,EAAO,mCAAG,+GAEWC,EAAAA,EAAAA,IAAA,8CACkBP,EADlB,qEAFX,gBAEJQ,EAFI,EAEJA,KAGRJ,EAAWI,EAAKC,SALJ,gDAOZC,QAAQC,IAAR,MAPY,yDAAH,qDAUbL,GAXC,CAYF,GAAE,CAACN,KAEF,yBACsB,IAAnBG,EAAQS,QACP,wBACGT,EAAQU,KAAI,SAAAC,GACX,OACE,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,OAGH,uBAAG,8CAIV,C","sources":["pages/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchFn = async () => {\n      try {\n        const { data } = await axios.get(\n          ` https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&api_key=c2d5ae1916124f8e18d2a212d8e4ab11`\n        );\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFn();\n  }, [movieId]);\n  return (\n    <div>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchFn","axios","data","results","console","log","length","map","review","author","content","id"],"sourceRoot":""}