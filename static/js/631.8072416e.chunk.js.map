{"version":3,"file":"static/js/631.8072416e.chunk.js","mappings":"8MAEAA,EAAAA,EAAAA,SAAAA,QAAA,gCACAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,SAAU,QACVC,KAAM,EACNC,QAAS,oCAEJ,IAAMC,EAAK,mCAAG,WAAMC,GAAN,kGAEML,EAAAA,EAAAA,IAAUK,GAAOA,EAAIC,SAAU,CACpDC,OAAQP,EAAAA,EAAAA,SAAAA,SAHO,uBAETQ,EAFS,EAETA,KAFS,kBAKVA,GALU,sCAOX,IAAIC,MAAM,iJAAV,MAPW,yDAAH,qD,yGC4ClB,UAhDiB,WACf,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAGA,IAAMM,EAAO,mCAAG,8GAEOZ,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAV,aAFZ,OAENF,EAFM,OAGZM,EAASN,EAAKS,MAHF,gDAKZC,QAAQC,IAAR,MALY,yDAAH,qDAQbH,GATC,CAUF,GAAE,CAACN,IAKJ,OACE,0BACE,wBACa,OAAVG,GACCA,EAAMO,KAAI,SAAAH,GACR,OACE,2BACE,gBACEI,IACEJ,EAAKK,aACD,CAAC,mCAAD,OAAoCL,EAAKK,eAZ7D,8EAecC,MAAO,IACPC,IAAI,YAEN,wBAAKP,EAAKQ,QACV,yBAAG,cAAYR,EAAKS,eAXbT,EAAKU,UAcjB,OAIV,C","sources":["components/Fetch/fetch.jsx","pages/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\naxios.defaults.params = {\n  language: 'en-US',\n  page: 1,\n  api_key: 'c2d5ae1916124f8e18d2a212d8e4ab11',\n};\nexport const fetch = async url => {\n  try {\n    const { data } = await axios.get(url || url.pathname, {\n      params: axios.defaults.params,\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Ошибка при загрузке данных:', error);\n  }\n};\n","import { fetch } from 'components/Fetch/fetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchFn = async () => {\n      try {\n        const data = await fetch(`movie/${movieId}/credits`);\n        setCasts(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchFn();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      <ul>\n        {casts !== null &&\n          casts.map(cast => {\n            return (\n              <li key={cast.credit_id}>\n                <img\n                  src={\n                    cast.profile_path\n                      ? [`https://image.tmdb.org/t/p/w500/${cast.profile_path}`]\n                      : defaultImg\n                  }\n                  width={125}\n                  alt=\"poster\"\n                />\n                <h3>{cast.name}</h3>\n                <p>Character: {cast.character}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default CastPage;\n"],"names":["axios","language","page","api_key","fetch","url","pathname","params","data","Error","movieId","useParams","useState","casts","setCasts","useEffect","fetchFn","cast","console","log","map","src","profile_path","width","alt","name","character","credit_id"],"sourceRoot":""}